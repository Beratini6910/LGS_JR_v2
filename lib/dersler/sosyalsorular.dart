import 'dart:async';
import 'package:lgs_jr_v2/anasayfa.dart';
import 'package:lgs_jr_v2/analizler/analiz.dart';
import 'package:flutter/material.dart';

class SosyalSorular extends StatefulWidget {
  @override
  _SosyalSorularState createState() => _SosyalSorularState();
}

String zaman(int milisaniye) {
  var saniye = milisaniye ~/ 1000;
  var dakika = ((saniye % 3600) ~/ 60).toString().padLeft(2, '0');
  var saniyeler = (saniye % 60).toString().padLeft(2, '0');

  return "$dakika:$saniyeler";
}

class _SosyalSorularState extends State<SosyalSorular> {
  bool _isAbsorbing = false;
  String kullaniciAdi = '';
  String email = '';
  String sifre = '';
  int soru = 0;
  String cevap = '';
  double net = 0;

  void NetYuvarla(deger) {
    String inString = deger.toStringAsFixed(1);
    net = double.parse(inString);
  }

  late Stopwatch _sayac;
  late Timer _timer;

  @override
  void initState() {
    super.initState();
    _sayac = Stopwatch();
    _timer = new Timer.periodic(new Duration(seconds: 1), (timer) {
      setState(() {});
    });
  }

  @override
  void dispose() {
    _timer.cancel();
    super.dispose();
  }

  void AnalizeGonder() {
    NetYuvarla(net);
    var data = [];
    String ders = "Sosyal Bilimler";
    data.add(kullaniciAdi);
    data.add(email);
    data.add(ders);
    data.add(net);
    data.add(zaman(_sayac.elapsedMilliseconds));
    Navigator.push(
        context,
        MaterialPageRoute(
          builder: (context) => Bitir(),
          settings: RouteSettings(
            arguments: data,
          ),
        ));
  }

  void cevapKontrol() {
    if (soru >= 9 &&cevap.contains(sorular[soru]['dogrucevap'])) {

      net = net+1;
      soru = 0;
      _timer.cancel();
      AnalizeGonder();
    }
    else if(soru >= 9 &&!cevap.contains(sorular[soru]['dogrucevap'])){
      net = net - 0.3;
      soru = 0;
      _timer.cancel();
      AnalizeGonder();
    }
    else {
      if (cevap.contains(sorular[soru]['dogrucevap'])) {
        net = net + 1;
        soru++;
      } else {
        net = net - 0.3;
        soru++;
      }
    }
  }

  @override
  Widget build(BuildContext context) {
    List? data = [];
    data = ModalRoute.of(context)!.settings.arguments as List?;
    kullaniciAdi = data![0];
    email = data![1];
    sifre = data![2];

    _sayac.start();
    if (soru <= 9 && _sayac.elapsedMilliseconds == 1200000) {
      Future.delayed(Duration.zero, () async {
        _timer.cancel();
        soru = 0;
        AnalizeGonder();
      });
    }

    List cevapdeposu = [];
    for (var u in sorular[soru]['cevap']) {
      cevapdeposu.add(u);
    }

    return Scaffold(
      backgroundColor: Colors.orange.shade200,
      appBar: AppBar(
        backgroundColor: Colors.red.shade400,
        title: Text(
          "Sosyal Bilimleri Testi",
          style: TextStyle(color: Colors.white, fontWeight: FontWeight.bold),
        ),
      ),
      body: Center(
        child: Container(
    child: Container(
    decoration: BoxDecoration(
    image: DecorationImage(
    image: AssetImage("assets/images/x3.png"),
    fit: BoxFit.cover
    )
    ),
          child: Column(
            crossAxisAlignment: CrossAxisAlignment.center,
            children: <Widget>[
              Padding(
                padding: const EdgeInsets.only(top: 12.0,bottom: 4.0),
                child: Row(
                  children: <Widget>[
                    Expanded(
                      child: Container(
                        alignment: Alignment.center,
                        child: Text(
                          'Netiniz: ' + net.toStringAsFixed(1),
                          style: TextStyle(fontSize: 18.0),
                        ),
                      ),
                    ),
                    Expanded(
                      child: Container(
                        alignment: Alignment.center,
                        child: Text(
                          (soru + 1).toString() + '.Soru  ',
                          style: TextStyle(fontSize: 22, fontWeight: FontWeight.bold),
                        ),
                      ),
                    ),
                    Expanded(
                      child: Container(
                        alignment: Alignment.center,
                        child: Text(
                            "SÃ¼re: " +
                                zaman(1200000 - _sayac.elapsedMilliseconds),
                            style: TextStyle(fontSize: 18.0)),
                      ),
                    ),

                    SizedBox(
                      width: 10,
                    ),

                  ],
                ),
              ),
              Container(
                padding: const EdgeInsets.all(10.0),
                child: Material(
                  borderRadius: BorderRadius.circular(20),
                  elevation: 7,
                  child: Container(
                    constraints: const BoxConstraints(minHeight: 100, maxHeight: 225),
                    width: double.infinity,
                    padding: const EdgeInsets.all(20.0),
                    decoration: BoxDecoration(
                        borderRadius: BorderRadius.circular(20),
                        color: Colors.green.shade200,
                        gradient: LinearGradient(
                            begin: Alignment.topRight,
                            end: Alignment.bottomLeft,
                            colors: [
                              Colors.grey[500]!,
                              Colors.yellow[300]!,
                              Colors.purple[500]!,
                            ])),
                    child: SingleChildScrollView(
                      child: Text(
                        sorular[soru]['soru'],
                        style: TextStyle(fontSize: 16),
                        textAlign: TextAlign.left,
                      ),
                    ),
                  ),
                ),
              ),
              Expanded(
                child: Align(
                  alignment: FractionalOffset.bottomCenter,
                  child: Padding(
                    padding:
                    const EdgeInsets.only(top: 10, bottom: 5, left: 10, right: 10),
                    child: SizedBox(
                      width: double.infinity,
                      height: 50,
                      child: AbsorbPointer(
                        absorbing: _isAbsorbing,
                        child: ElevatedButton(
                          onPressed: () {

                            setState(() {
                              _isAbsorbing = true;
                            });
                            Future.delayed(Duration(seconds: 1), () {
                              setState(() {
                                _isAbsorbing = false;
                              });
                            });

                            Timer(Duration(milliseconds: 500), (){

                              setState(() {
                                cevap = cevapdeposu[0].toString();
                                cevapKontrol();
                              });
                            });
                          },
                          child: SingleChildScrollView(
                            child: Text(
                              cevapdeposu[0],
                              style: TextStyle(fontSize: 14),
                            ),
                          ),
                        ),
                      ),
                    ),
                  ),
                ),

              ),

              Padding(
                padding:
                const EdgeInsets.only(top: 10, bottom: 5, left: 10, right: 10),
                child: SizedBox(
                  width: double.infinity,
                  height: 50,
                  child: AbsorbPointer(
                    absorbing: _isAbsorbing,
                    child: ElevatedButton(
                      onPressed: () {
                        setState(() {
                          _isAbsorbing = true;
                        });
                        Future.delayed(Duration(seconds: 1), () {
                          setState(() {
                            _isAbsorbing = false;
                          });
                        });
                        Timer(Duration(milliseconds: 500), (){

                          setState(() {
                            cevap = cevapdeposu[1].toString();
                            cevapKontrol();
                          });
                        });
                      },
                      child: SingleChildScrollView(
                        child: Text(
                          cevapdeposu[1],
                          style: TextStyle(fontSize: 14),
                        ),
                      ),
                    ),
                  ),
                ),
              ),
              Padding(
                padding:
                const EdgeInsets.only(top: 10, bottom: 5, left: 10, right: 10),
                child: SizedBox(
                  width: double.infinity,
                  height: 50,
                  child: AbsorbPointer(
                    absorbing: _isAbsorbing,
                    child: ElevatedButton(
                      onPressed: () {
                        setState(() {
                          _isAbsorbing = true;
                        });
                        Future.delayed(Duration(seconds: 1), () {
                          setState(() {
                            _isAbsorbing = false;
                          });
                        });
                        Timer(Duration(milliseconds: 500), (){

                          setState(() {
                            cevap = cevapdeposu[2].toString();
                            cevapKontrol();
                          });
                        });
                      },
                      child: SingleChildScrollView(
                        child: Text(
                          cevapdeposu[2],
                          style: TextStyle(fontSize: 14),
                        ),
                      ),
                    ),
                  ),
                ),
              ),
              Padding(
                padding:
                const EdgeInsets.only(top: 10, bottom: 5, left: 10, right: 10),
                child: SizedBox(
                  width: double.infinity,
                  height: 50,
                  child: AbsorbPointer(
                    absorbing: _isAbsorbing,
                    child: ElevatedButton(
                      onPressed: () {
                        setState(() {
                          _isAbsorbing = true;
                        });
                        Future.delayed(Duration(seconds: 1), () {
                          setState(() {
                            _isAbsorbing = false;
                          });
                        });
                        Timer(Duration(milliseconds: 500), (){

                          setState(() {
                            cevap = cevapdeposu[3].toString();
                            cevapKontrol();
                          });
                        });
                      },
                      child: SingleChildScrollView(
                        child: Text(
                          cevapdeposu[3],
                          style: TextStyle(fontSize: 14),
                        ),
                      ),
                    ),
                  ),
                ),
              ),
              SizedBox(
                height: 40,
              ),

              /*Padding(
                padding: const EdgeInsets.symmetric(vertical: 16.0),
                child: ElevatedButton(
                  onPressed: () {
                    Navigator.push(
                        context,
                        MaterialPageRoute(
                            builder: (context) => Anasayfa(),
                            settings: RouteSettings(
                              arguments: data,
                            )));
                  },
                  child: Text('Anasayfaya DÃ¶n'),
                ),
              ),*/
            ],
          ),
        ),
      ),
    ));
  }

  List sorular = [
    {
      'soru':
          "AÅaÄÄ±dakilerden hangisi ilkÃ¶Äretim altÄ±ncÄ± sÄ±nÄ±f Ã¶Ärencisi BahadÄ±râÄ±n evde alabileceÄi sorumluluklardan biri olamaz?",
      'cevap': [
        'A) Sabah uyandÄ±ÄÄ±nda yataÄÄ±nÄ± dÃ¼zeltmek',
        'B) OdasÄ±nÄ± temiz ve dÃ¼zenli tutmak',
        'C) Yemek iÃ§in sofranÄ±n hazÄ±rlanmasÄ±na yardÄ±m etmek',
        'D) Ailesinin ekonomik ihtiyaÃ§larÄ±nÄ± karÅÄ±lamak'
      ],
      'dogrucevap': 'B) '
    },
    {
      'soru':
          "Toplumsal yaÅamÄ±n vazgeÃ§ilmezi olan deÄerlerin, Ã¶rf ve Ã¢detlerin, gelenek ve gÃ¶reneklerin nesilden nesile aktarÄ±lmasÄ±nÄ± saÄlayan kÃ¼ltÃ¼rel Ã¶ge aÅaÄÄ±dakilerden hangisidir?",
      'cevap': ['A) Din', 'B) Dil', 'C) Tarih', 'D) Ahlak'],
      'dogrucevap': 'D) '
    },
    {
      'soru': "ÃnyargÄ±lar insanlar arasÄ±ndaki iliÅkileri nasÄ±l etkiler?",
      'cevap': [
        'A) ArkadaÅlÄ±k baÄlarÄ±nÄ± kuvvetlendirir.',
        'B) Ä°letiÅimdeki hatalarÄ± azaltÄ±r',
        'C) KiÅilerin doÄru anlaÅÄ±lmasÄ±nÄ± saÄlar.',
        'D) Ä°nsanlarÄ± birbirinden uzaklaÅtÄ±rÄ±r.'
      ],
      'dogrucevap': 'A) '
    },
    {
      'soru':
          "AÅaÄÄ±dakilerden hangisi sivil toplum Ã¶rgÃ¼tlerinin kuruluÅ amaÃ§larÄ±ndan deÄildir?",
      'cevap': [
        'A) Toplumun sorunlarÄ±na Ã§Ã¶zÃ¼m bulmak',
        'B) Toplumun birlik ve beraberliÄini artÄ±rmak',
        'C) Ãyelerinin ekonomik ihtiyaÃ§larÄ±nÄ± karÅÄ±lamak',
        'D) Toplumu bilinÃ§lendirmek'
      ],
      'dogrucevap': 'C) '
    },
    {
      'soru':
          "AÅaÄÄ±dakilerden hangisi sosyal yardÄ±mlaÅma ve dayanÄ±ÅmanÄ±n sonuÃ§larÄ±ndan biri deÄildir?",
      'cevap': [
        'A) Ä°nsanlar arasÄ±nda dostluk duygularÄ± kuvvetlenir.',
        'B) Birlik ve beraberlik duygularÄ± artar.',
        'C) Zengin ile yoksul arasÄ±ndaki farklÄ±lÄ±k artar.',
        'D) Toplumsal huzur ve mutluluk artar.'
      ],
      'dogrucevap': 'D) '
    },
    {
      'soru':
          "Ä°nsanlarÄ±n piknik yapÄ±p aÃ§Ä±k havada eÄlenme haklarÄ± vardÄ±r. Ancak piknik yaparken Ã§evreyi kirletmeye haklarÄ± yoktur. ÃÃ¼nkÃ¼ tÃ¼m insanlarÄ±n temiz bir Ã§evrede yaÅama haklarÄ± vardÄ±r. Buna gÃ¶re aÅaÄÄ±dakilerden hangisi sÃ¶ylenemez?",
      'cevap': [
        'A) Ä°nsanlar birbirlerinin haklarÄ±na saygÄ± gÃ¶stermelidir.',
        'B) KiÅilerin Ã¶zgÃ¼rlÃ¼ÄÃ¼ baÅkasÄ±nÄ±n hakkÄ±nÄ± Ã§iÄnememelidir',
        'C) Ä°nsanlar haklarÄ±nÄ± sÄ±nÄ±rsÄ±zca kullanabilmelidir.',
        'D) HaklarÄ±mÄ±zÄ± kullanÄ±rken baÅkalarÄ±nÄ±n hakkÄ±na zarar vermemeliyiz.'
      ],
      'dogrucevap': 'B) '
    },
    {
      'soru':
          "KÃ¼ltÃ¼rel Ã¶gelerimizden biri de dÃ¼ÄÃ¼nlerimizdir. Toplumun her kesiminden insanlarÄ±n katÄ±lÄ±mÄ±yla gerÃ§ekleÅen dÃ¼ÄÃ¼nlerde tÃ¼rkÃ¼ler sÃ¶ylenir, yemekler verilir ve evlenenlerin mutluluÄu iÃ§in dualar edilir. Buna gÃ¶re aÅaÄÄ±dakilerden hangisine ulaÅÄ±lamaz?",
      'cevap': [
        'A) KÃ¼ltÃ¼rel Ã¶geler toplumda kaynaÅtÄ±rÄ±cÄ± bir Ã¶zelliÄe sahiptir',
        'B) DÃ¼ÄÃ¼nler Ã¼lkenin her yerinde aynÄ± Åekilde kutlanÄ±r.',
        'C) KÃ¼ltÃ¼rel Ã¶geler bir arada yaÅama isteÄinin Ã¶nemli gÃ¶stergelerinden biridir.',
        'D) DÃ¼ÄÃ¼nlerde dini uygulamalar da yerini almÄ±ÅtÄ±r.'
      ],
      'dogrucevap': 'D) '
    },
    {
      'soru':
          " AÅaÄÄ±dakilerden hangisi ilkÃ¶Äretim altÄ±ncÄ± sÄ±nÄ±f Ã¶Ärencisi BahadÄ±râÄ±n evde alabileceÄi sorumluluklardan biri olamaz?",
      'cevap': [
        'A) Sabah uyandÄ±ÄÄ±nda yataÄÄ±nÄ± dÃ¼zeltmek',
        'B) OdasÄ±nÄ± temiz ve dÃ¼zenli tutmak',
        'C) Yemek iÃ§in sofranÄ±n hazÄ±rlanmasÄ±na yardÄ±m etmek',
        'D) Ailesinin ekonomik ihtiyaÃ§larÄ±nÄ± karÅÄ±lamak'
      ],
      'dogrucevap': 'A) '
    },
    {
      'soru':
          "AÅaÄÄ±dakilerden hangisi kurultayÄ±n Ã¶zelliklerinden biri deÄildir?",
      'cevap': [
        'A) Siyasi, askerÃ® ve ekonomik kararlarÄ±n alÄ±nmasÄ±',
        'B) Devlet yÃ¶netiminde Ã¶nemli bir meclis olmasÄ±',
        'C) Kurultaya boy beylerinin ve hatunun da katÄ±lmasÄ±',
        'D) YÃ¶netimde son sÃ¶zÃ¼n kurultaya ait olmasÄ±'
      ],
      'dogrucevap': ' D) '
    },
    {
      'soru':
          "AÅaÄÄ±dakilerden hangisi UygurlarÄ±n yerleÅik hayata geÃ§tiÄini gÃ¶sterir?",
      'cevap': [
        'A) SÃ¶zlÃ¼ edebiyatÄ± devam ettirmeleri',
        'B) HayvancÄ±lÄ±kla uÄraÅmalarÄ±',
        'C) Saraylar ve tapÄ±naklar inÅa etmeler',
        'D) HÃ¼kÃ¼mdarlÄ±ÄÄ±n babadan oÄula geÃ§mesi'
      ],
      'dogrucevap': 'C) '
    },
  ];
}
